Assignment 1Wanyi SuStudent # 301445656Q1:Clear about WordCount now. Just need more time to play with Java datatypes.Q2:When reducer = 1, the process results in all 319553 data output from just one reducer. All outputs are grouped by same keys with counts summed up and are listed in alphabetic order. But when we submit with -D mapreduce.job.reduces=3, the number of reducer increases to 3. Now the large output is separated into three nearly equal sizes and processed by three reducers respectively, with these three parts of word results grouped by same keys in alphabetic order and their counts summed up in each reducer.With multiple reducers, it’s safer to process with large output sets. Because other reducers would keep processing even if one reducer failed. Besides, multiple reducers offer faster processing time than only one reducer does.Q3:When reducer = 0, the outputs are returned in three mappers. The words not shuffled and “reduced”. They just come directly from mapping process. The output is just randomly split words that are just scattered with 1 count each and not grouped and not summed up in alphabetic order.Q4:With a combiner optimization before reducer on large datasets, the running time is faster. (25.698s vs. 24.886s)